<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="alone">
	<resultMap id="resultMapAloneVo" type="AloneVo">
		<result column="review_no" property="reviewNo" />
		<result column="user_no" property="userNo" />
		<result column="visited_no" property="visitedNo" />
		<result column="review_content" property="reviewContent" />
		<result column="user_score" property="userScore" />
		<result column="review_file_name" property="reviewFileName" />
		<result column="review_reported" property="reviewReported" />
		<result column="visited_date" property="visitedDate" />
		<result column="visited_count" property="visitedCount" />
		<result column="store_no" property="storeNo" />
		<result column="store_name" property="storeName" />
		<result column="store_x" property="storeX" />
		<result column="store_y" property="storeY" />
		<result column="store_road_address" property="storeRoadAddress" />
		<result column="store_old_address" property="storeOldAddress" />
		<result column="menu_1st_cate_name" property="menu1stCateName" />
		<result column="user_name" property="userName" />
		<result column="menu_name" property="menuName" />
		<result column="group_name" property="groupName" />
		<result column="age_group" property="ageGroup" />
	</resultMap>
	
	<!-- ============================ 방문내역 ============================ -->
	<select id="reviewList" parameterType="int" resultMap="resultMapAloneVo">
		<![CDATA[
			select  COUNT(v.visited_no) visited_count, 
			        r.review_no review_no, 
			        s.store_name store_name, 
			        s.store_road_address store_road_address, 
			        r.review_content review_content, 
			        r.user_score user_score, 
			        r.review_file_name review_file_name, 
			        r.review_reported review_reported, 
			        ageGroup 
			from review r, users u, visited v, store s,(
				select rownum rn, 
				        visitCount, 
				        ageGroup 
				from(select  count(v.visited_no)visitCount, 
						case when to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')>10 and 
					 			to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')<30 then '20대' 
							 when to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')>=30 and 
							 	to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')<40 then '30대' 
							 when to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')>=40 and 
							 	to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')<50 then '40대' 
							 when to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')>=50 and 
							 	to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')<60 then '50대' 
							 when to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')>=60 and 
							 	to_char(sysdate,'YYYY')-to_char(to_date(u.user_birth_year,'YYYY'),'YYYY')<120 then '60대 이상' 
				        else '미입력' end ageGroup 
				        from users u, visited v 
				        where u.user_no = v.user_no 
				        group by u.user_birth_year 
				        order by visitCount desc) 
				        order by rn asc) 
				where u.user_no = r.user_no 
				and v.visited_no = r.visited_no 
				and v.store_no = s.store_no 
				and r.user_no = #{userNo} 
				and rn = 1 
				group by r.review_no,s.store_name,s.store_road_address,r.review_content,r.user_score,r.review_file_name,r.review_reported,ageGroup 
				order by r.review_no asc
		]]>
	</select>
	
	<!-- 리뷰 수정창 -->
	<select id="getReview" parameterType="int" resultMap="resultMapAloneVo">
		<![CDATA[
			select  r.review_no, 
					s.store_name, 
				    f1.menu_1st_cate_name, 
	                m.menu_name, 
					s.store_road_address, 
					u.user_name, 
					r.review_file_name, 
					r.user_score, 
					g.group_name, 
					r.review_content 
			from review r, users u, visited v, store s, food_1st_category f1, groups g, menu m ,food_2nd_category f2 
			where u.user_no = r.user_no 
			and v.visited_no = r.visited_no 
			and v.store_no = s.store_no 
			and v.group_no = g.group_no 
			and v.menu_no = m.menu_no 
			and f2.menu_1st_cate_no = f1.menu_1st_cate_no 
			and s.menu_2nd_cate_no = f2.menu_2nd_cate_no 
			and r.review_no = #{reviewNo}  
		]]>
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="AloneVo">
		<![CDATA[
			update review 
			set review_content = #{reviewContent}, 
			user_score = #{userScore} 
		]]>
			<if test="reviewFileName != null"> 
		<![CDATA[
		    , review_file_name = #{reviewFileName} 
		]]>
			</if>
		<![CDATA[
			where review_no = #{reviewNo}
		]]>
	</update>
	
	<!-- 리뷰 1개 삭제 -->
	<delete id="deleteReview" parameterType="int">
		<![CDATA[
			delete from review 
			where review_no = #{reviewNo}
		]]>
	</delete>

</mapper>
